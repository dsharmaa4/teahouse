spring.application.name=water-service
spring.profiles.default=local
server.port=8091

spring.output.ansi.enabled=always
spring.jackson.serialization.indent_output=true
spring.jackson.date-format=com.fasterxml.jackson.databind.util.ISO8601DateFormat

logging.file.name=${spring.application.home:.}/logs/${spring.application.name}.log
logbook.exclude=/actuator/**

management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
management.info.env.enabled=true
management.info.java.enabled=true
management.info.os.enabled=true

spring.cloud.discovery.client.composite-indicator.enabled=false

management.metrics.tags.application=${spring.application.name}
management.metrics.tags.profiles=${spring.profiles.active}
management.metrics.distribution.percentiles.all=0.95, 0.98, 0.99, 0.999, 0.9999, 0.99999
management.metrics.export.prometheus.step=10s
management.metrics.distribution.percentiles-histogram.all=true

server.tomcat.mbeanregistry.enabled=true

logging.level.com.netflix.discovery=OFF
logging.level.org.springframework.cloud.sleuth.instrument.jdbc.TraceListenerStrategy=WARN

spring.datasource.url=jdbc:h2:mem:water-db;MODE=MySQL
spring.datasource.username=sa
spring.datasource.password=password

spring.jpa.hibernate.ddl-auto=validate
spring.h2.console.enabled=true
spring.sleuth.jdbc.p6spy.enable-logging=true
spring.sleuth.sampler.probability=1.0

# Generate schema creation script
#spring.jpa.properties.hibernate.hbm2ddl.delimiter=;
#spring.jpa.properties.javax.persistence.schema-generation.scripts.action=create
#spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=create.sql

spring.profiles.active=local, chaos-monkey
chaos.monkey.enabled=false
##chaos.monkey.watcher.repository=true does not work on spring-data-rest repositories
##chaos.monkey.watcher.beans=waterRepository does not work either
## so I'm using rest-controller instead :(
#chaos.monkey.watcher.rest-controller=true
#chaos.monkey.assaults.exceptions-active=true
#chaos.monkey.assaults.latencyActive=true
#chaos.monkey.assaults.level=300
#chaos.monkey.assaults.latency-range-start=100
#chaos.monkey.assaults.latency-range-end=1000
#management.endpoint.chaosmonkey.enabled=true
#management.endpoint.chaosmonkeyjmx.enabled=true
